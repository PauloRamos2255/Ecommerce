//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TADIAdminEntities : DbContext
    {
        public TADIAdminEntities()
            : base("name=TADIAdminEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Carrito> Carrito { get; set; }
        public virtual DbSet<Categoria> Categoria { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Detalle_Venta> Detalle_Venta { get; set; }
        public virtual DbSet<Marca> Marca { get; set; }
        public virtual DbSet<Productos> Productos { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
        public virtual DbSet<Tb_Ubigeo> Tb_Ubigeo { get; set; }
    
        public virtual int sp_EditarCategoria(Nullable<int> idCategoria, string descripcion, Nullable<bool> activo, ObjectParameter mensaje, ObjectParameter resultado)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EditarCategoria", idCategoriaParameter, descripcionParameter, activoParameter, mensaje, resultado);
        }
    
        public virtual int sp_EditarMarca(Nullable<int> idMarca, string descripcion, Nullable<bool> activo, ObjectParameter mensaje, ObjectParameter resultado)
        {
            var idMarcaParameter = idMarca.HasValue ?
                new ObjectParameter("IdMarca", idMarca) :
                new ObjectParameter("IdMarca", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EditarMarca", idMarcaParameter, descripcionParameter, activoParameter, mensaje, resultado);
        }
    
        public virtual int sp_EditarUsuario(Nullable<int> idUsuario, string nombres, string apellidos, Nullable<int> rol, string correo, string numero, Nullable<bool> activo, ObjectParameter mensaje, ObjectParameter resultado)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("Rol", rol) :
                new ObjectParameter("Rol", typeof(int));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EditarUsuario", idUsuarioParameter, nombresParameter, apellidosParameter, rolParameter, correoParameter, numeroParameter, activoParameter, mensaje, resultado);
        }
    
        public virtual int sp_EliminarCategoria(Nullable<int> idCategoria, ObjectParameter mensaje, ObjectParameter resultado)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarCategoria", idCategoriaParameter, mensaje, resultado);
        }
    
        public virtual int sp_EliminarMarca(Nullable<int> idMarca, ObjectParameter mensaje, ObjectParameter resultado)
        {
            var idMarcaParameter = idMarca.HasValue ?
                new ObjectParameter("IdMarca", idMarca) :
                new ObjectParameter("IdMarca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarMarca", idMarcaParameter, mensaje, resultado);
        }
    
        public virtual int sp_EliminarProducto(Nullable<int> idProducto, ObjectParameter mensaje, ObjectParameter resultado)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_EliminarProducto", idProductoParameter, mensaje, resultado);
        }
    
        public virtual int sp_RegistarCliente(string nombres, string apellidos, string coreo, string clave, Nullable<int> sexo, ObjectParameter mensaje, ObjectParameter resultado)
        {
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var coreoParameter = coreo != null ?
                new ObjectParameter("Coreo", coreo) :
                new ObjectParameter("Coreo", typeof(string));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("Sexo", sexo) :
                new ObjectParameter("Sexo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegistarCliente", nombresParameter, apellidosParameter, coreoParameter, claveParameter, sexoParameter, mensaje, resultado);
        }
    
        public virtual int sp_RegistrarCategoria(string descripcion, Nullable<bool> activo, ObjectParameter mensaje, ObjectParameter resultado)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegistrarCategoria", descripcionParameter, activoParameter, mensaje, resultado);
        }
    
        public virtual int sp_RegistrarMarca(string descripcion, Nullable<bool> activo, ObjectParameter mensaje, ObjectParameter resultado)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegistrarMarca", descripcionParameter, activoParameter, mensaje, resultado);
        }
    
        public virtual int sp_RegistrarProducto(string nombre, string descripciopn, Nullable<int> idMarca, Nullable<int> idCategoria, Nullable<decimal> precio, Nullable<int> stock, Nullable<bool> activo, ObjectParameter mensaje, ObjectParameter resultado)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripciopnParameter = descripciopn != null ?
                new ObjectParameter("Descripciopn", descripciopn) :
                new ObjectParameter("Descripciopn", typeof(string));
    
            var idMarcaParameter = idMarca.HasValue ?
                new ObjectParameter("IdMarca", idMarca) :
                new ObjectParameter("IdMarca", typeof(int));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_RegistrarProducto", nombreParameter, descripciopnParameter, idMarcaParameter, idCategoriaParameter, precioParameter, stockParameter, activoParameter, mensaje, resultado);
        }
    
        public virtual int sp_Registrarusuario(string nombres, string apellidos, string correo, Nullable<int> rol, string clave, string numero, Nullable<bool> activo, ObjectParameter mensaje, ObjectParameter resultado)
        {
            var nombresParameter = nombres != null ?
                new ObjectParameter("Nombres", nombres) :
                new ObjectParameter("Nombres", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var correoParameter = correo != null ?
                new ObjectParameter("Correo", correo) :
                new ObjectParameter("Correo", typeof(string));
    
            var rolParameter = rol.HasValue ?
                new ObjectParameter("rol", rol) :
                new ObjectParameter("rol", typeof(int));
    
            var claveParameter = clave != null ?
                new ObjectParameter("Clave", clave) :
                new ObjectParameter("Clave", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Registrarusuario", nombresParameter, apellidosParameter, correoParameter, rolParameter, claveParameter, numeroParameter, activoParameter, mensaje, resultado);
        }
    
        public virtual ObjectResult<sp_ReporteDashboard_Result> sp_ReporteDashboard()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReporteDashboard_Result>("sp_ReporteDashboard");
        }
    
        public virtual ObjectResult<sp_ReporteVentas_Result> sp_ReporteVentas(string fechainicio, string fechafin, string idTransaccion)
        {
            var fechainicioParameter = fechainicio != null ?
                new ObjectParameter("fechainicio", fechainicio) :
                new ObjectParameter("fechainicio", typeof(string));
    
            var fechafinParameter = fechafin != null ?
                new ObjectParameter("fechafin", fechafin) :
                new ObjectParameter("fechafin", typeof(string));
    
            var idTransaccionParameter = idTransaccion != null ?
                new ObjectParameter("idTransaccion", idTransaccion) :
                new ObjectParameter("idTransaccion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_ReporteVentas_Result>("sp_ReporteVentas", fechainicioParameter, fechafinParameter, idTransaccionParameter);
        }
    
        public virtual int usp_EditarProducto(Nullable<int> idProducto, string nombre, string descripcion, Nullable<int> idMarca, Nullable<int> idCategoria, Nullable<decimal> precio, Nullable<int> stock, Nullable<bool> activo, ObjectParameter mensaje, ObjectParameter resultado)
        {
            var idProductoParameter = idProducto.HasValue ?
                new ObjectParameter("IdProducto", idProducto) :
                new ObjectParameter("IdProducto", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idMarcaParameter = idMarca.HasValue ?
                new ObjectParameter("IdMarca", idMarca) :
                new ObjectParameter("IdMarca", typeof(int));
    
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_EditarProducto", idProductoParameter, nombreParameter, descripcionParameter, idMarcaParameter, idCategoriaParameter, precioParameter, stockParameter, activoParameter, mensaje, resultado);
        }
    }
}
